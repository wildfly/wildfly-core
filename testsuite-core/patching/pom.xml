<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly.core</groupId>
        <artifactId>wildfly-core-testsuite</artifactId>
        <version>1.0.0.Alpha3-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>wildfly-core-ts-patching</artifactId>
    <packaging>jar</packaging>
    <name>WildFly Core Test Suite: Patching</name>


    <properties>
        <jbossas.ts.integ.dir>${basedir}/..</jbossas.ts.integ.dir>
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>
        <jboss.home.dir>${project.basedir}/target/wildfly-core</jboss.home.dir>
        <!-- if true, created temporary files will be deleted after each test -->
        <cleanup.tmp>true</cleanup.tmp>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-patching</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-testsuite-shared</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-test-runner</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>16.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-build</artifactId>
            <type>zip</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-wildfly</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeGroupIds>org.wildfly</includeGroupIds>
                            <includeArtifactIds>wildfly-core-build</includeArtifactIds>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${version.antrun.plugin}</version>
                <executions>
                    <execution>
                        <phase>process-test-resources</phase>
                        <configuration>
                            <target>
                                <delete dir="${project.build.directory}/dependency-maven-plugin-markers"/>
                                <move file="${project.build.directory}/wildfly-core-${project.version}"
                                      tofile="${project.build.directory}/wildfly-core" overwrite="true" force="true"/>
                                <!--<copy file="${project.build.testOutputDirectory}/mgmt-users.properties"
                                      todir="${project.build.directory}/wildfly-core/standalone/configuration" overwrite="true"/>-->
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.surefire.plugin}</version>
                <configuration>
                    <!-- fork for each each test class -->
                    <reuseForks>false</reuseForks>
                    <systemPropertyVariables>
                        <jbossas.version>${project.parent.version}</jbossas.version>
                        <jboss.home.dir>${jboss.home.dir}</jboss.home.dir>
                        <jbossas.dist>${jboss.home.dir}</jbossas.dist>
                        <!--<module.path>${jboss.home.dir}/modules</module.path>-->
                        <cleanup.tmp>${cleanup.tmp}</cleanup.tmp>
                        <!-- This does not really seem to speed up things after all
                        <jboss.server.config.file.name>standalone-minimal.xml</jboss.server.config.file.name>
                        -->
                    </systemPropertyVariables>
                </configuration>
            </plugin>


            <!-- Build the server configuration -->
            <!--  <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                      <execution>
                          <phase>process-test-resources</phase>
                          <goals>
                              <goal>run</goal>
                          </goals>
                      </execution>
                  </executions>
                  <configuration>
                      <target>
                          <ant antfile="${jbossas.ts.integ.dir}/src/test/scripts/patching-build.xml">
                              <property name="jboss.dist" value="${jboss.dist}" />
                              <target name="build-patching"/>
                          </ant>
                      </target>
                  </configuration>
              </plugin>-->
        </plugins>
    </build>

</project>
