#
# Copyright The WildFly Authors
# SPDX-License-Identifier: Apache-2.0
#

# Domain root
domain=The root node of the domain-level management model.
domain.name=The name given to this domain.
domain.extension=A list of extension modules.
domain.path=A list of named filesystem paths. The paths may or may not be fully specified (i.e. include the actual paths.)
domain.core-service=Configuration of core services provided by the managed domain hosts and servers.
domain.profile=A list of profiles available for use in the domain
domain.interface=A list of named network interfaces available for use in the domain. The interfaces may or may not be fully specified (i.e. include criteria on how to determine their IP address.
domain.socket-binding-group=A list of socket binding groups available for use in the domain
domain.system-property=A list of system properties to set on all servers in the domain.
domain.deployment=A list of deployments available for use in the domain
domain.deployment-overlay=A list of deployment overlays available for use by the server
domain.server-group=A list of server groups available for use in the domain
domain.host-exclude=A list of configurations of resources that should be hidden by the Domain Controller from certain secondary Host Controllers.
domain.local-host-name=The name of the locally running host controller.
domain.host=Host controllers currently running in the domain
domain.domain-organization=Identification of the current organization this domain is a part of.
domain.process-type=The type of process represented by this root resource. Either "Domain Controller" or "Host Controller".
domain.release-version=The version of the WildFly Core release that is being run by the host controller that is acting as the domain controller.
domain.release-codename=The codename of the WildFly Core release that is being run by the host controller that is acting as the domain controller.
domain.management-client-content=Rollout plans defined for this domain.
domain.product-name=The name of the WildFly Core based product that is being run by the host controller that is acting as the domain controller.
domain.product-version=The version of the WildFly Core based product release that is being run by the host controller that is acting as the domain controller.
domain.management-major-version=The major version of the WildFly Core kernel management interface that is provided by the host controller that is acting as the domain controller.
domain.management-minor-version=The minor version of the WildFly Core kernel management interface that is provided by the host controller that is acting as the domain controller.
domain.management-micro-version=The micro version of the WildFly Core kernel management interface that is provided by the host controller that is acting as the domain controller.
domain.deployment.remove=Remove a deployment from the list of content available for use across the domain. The deployment cannot be currently mapped to any server groups.
domain.namespaces=Map of namespaces used in the configuration XML document, where keys are namespace prefixes and values are schema URIs.
domain.schema-locations=Map of locations of XML schemas used in the configuration XML document, where keys are schema URIs and values are locations where the schema can be found.
domain.launch-type=The manner in which the server process was launched. Either "DOMAIN" for a domain mode server launched by a Host Controller, "STANDALONE" for a standalone server launched from the command line, or "EMBEDDED" for a standalone server launched as an embedded part of an application running in the same virtual machine.
domain.list-unclean-host-unregistrations=Returns a list of host names which did not unregister cleanly. This could indicate a problem with the listed hosts.

domain.reload-servers=Reloads all servers currently running in the domain.
domain.reload-servers.blocking=Wait until the servers are fully started before returning from the operation.
domain.reload-servers.timeout=The graceful shutdown timeout. If this is zero then a graceful shutdown will not be attempted, if this is -1 then the server will wait for a graceful shutdown indefinitely.
domain.reload-servers.start-mode=The mode the servers should reload in, can be either suspend or normal.
domain.restart-servers=Restarts all servers currently running in the domain.
domain.restart-servers.blocking=Wait until the servers are fully started before returning from the operation.
domain.restart-servers.timeout=The graceful shutdown timeout. If this is zero then a graceful shutdown will not be attempted, if this is -1 then the server will wait for a graceful shutdown indefinitely.
domain.restart-servers.start-mode=The mode the servers should restart in, can be either suspend or normal.
domain.start-servers=Starts all configured servers in the domain that are not currently running.
domain.start-servers.blocking=Wait until the servers are fully started before returning from the operation.
domain.start-servers.start-mode=The mode the servers should start running in, can be either suspend or normal.
domain.stop-servers=Stops all servers currently running in the domain.
domain.stop-servers.blocking=Wait until the servers are stopped before returning from the operation.
domain.stop-servers.suspend-timeout=The graceful stop timeout in seconds. If this is zero (the default) then the server will stop immediately. A value larger than zero means the server will wait up to this many seconds for all active requests to finish. A value smaller than zero means that the server will wait indefinitely for all active requests to finish.
domain.stop-servers.timeout=The graceful shutdown timeout. If this is zero then a graceful shutdown will not be attempted, if this is -1 then the server will wait for a graceful shutdown indefinitely.
domain.stop-servers.timeout.deprecated=Use suspend-timeout instead.
domain.resume-servers=Resumes processing on all servers in the domain
domain.suspend-servers=Suspends all servers in the domain, all current operations will finish, and no new operations will be allowed.
domain.suspend-servers.suspend-timeout=The suspend operation timeout in seconds. If this is zero (the default) the operation will return immediately. A value larger than zero means the operation will wait up to this many seconds to complete before returning. A value smaller than zero means that the operation will wait indefinitely for all active requests to finish. Note that the operation will not roll back if the timeout is exceeded, it just means that not all current requests completed in the specified timeout.
domain.suspend-servers.timeout=Timeout in seconds. If this is zero the operation will return immediately, -1 means that it will wait indefinitely. Note that the operation will not roll back if the timeout is exceeded, it just means that not all current requests completed in the specified timeout.
domain.suspend-servers.timeout.deprecated=Use suspend-timeout instead.

profile=A named set of subsystem configurations.
profile.name=The name of the profile
profile.add=Add a new 'profile'
profile.add.includes=The value of the new profile's 'includes' attribute
profile.describe=Outputs the profile's subsystems as a list of operations that can be executed to create the same model
profile.remove=Remove a 'profile'
profile.remove.name=The value of the profile's 'name' attribute
profile.includes=A list of the names of profiles to include in this profile. Overriding subsystems is not supported.
profile.include.profile=The name of the included profile
profile.includes.add=Add a profile to the list of included profiles
profile.includes.add.include=The name of the included profile
profile.includes.remove=Remove a profile from the list of included profiles
profile.includes.remove.include=The name of the included profile
profile.subsystem=The subsystems that make up the profile.
profile.clone=Clones this profile to a new one. The clone is a copy of all this profile's configuration and subsystems.
profile.clone.to-profile=The name of the new profile to be created.


server-group=The server group configuration.
server-group.add=Add a new server group.
server-group.add.jvm=The jvm name.
server-group.remove=Remove an existing new server group.
server-group.profile=The profile name.
server-group.jvm=The named jvm.
server-group.graceful-startup=Start the servers gracefully, queuing or cleanly rejecting incoming requests until the server is fully started.
server-group.socket-binding-group=The default socket binding group used for servers associated with this group.
server-group.socket-binding-default-interface=The socket binding group default interface for this server.
server-group.socket-binding-port-offset=The default offset to be added to the port values given by the socket binding group.
server-group.management-subsystem-endpoint=Set to true to have servers belonging to the server group connect back to the host controller using the endpoint from their remoting subsystem. The subsystem must be present for this to work.
server-group.deployment=A list of deployments available for use in the server group.
server-group.system-property=A list of system properties to set on all servers in this server-group.

server-group.deployment.remove=Remove a deployment from the list of content available for use on servers in the group. If the deployment is currently deployed in the runtime it will first be undeployed.

server-group.reload-servers=Reloads all servers belonging to the server group currently running in the domain.
server-group.reload-servers.blocking=Wait until the servers are fully started before returning from the operation.
server-group.reload-servers.timeout=The graceful shutdown timeout. If this is zero then a graceful shutdown will not be attempted, if this is -1 then the server will wait for a graceful shutdown indefinitely.
server-group.reload-servers.start-mode=The mode the servers should start reload in, can be either suspend or normal.
server-group.restart-servers=Restarts all servers belonging to the server group currently running in the domain.
server-group.restart-servers.blocking=Wait until the servers are fully started before returning from the operation.
server-group.restart-servers.timeout=The graceful shutdown timeout. If this is zero then a graceful shutdown will not be attempted, if this is -1 then the server will wait for a graceful shutdown indefinitely.
server-group.restart-servers.start-mode=The mode the servers should restart in, can be either suspend or normal.
server-group.start-servers=Starts all configured servers belonging to the server group in the domain that are not currently running.
server-group.start-servers.blocking=Wait until the servers are fully started before returning from the operation.
server-group.start-servers.start-mode=The mode the servers should start running in, can be either suspend or normal.
server-group.stop-servers=Stops all servers belonging to the server group currently running in the domain.
server-group.stop-servers.blocking=Wait until the servers are fully stopped before returning from the operation.
server-group.stop-servers.suspend-timeout=The graceful stop timeout in seconds. If this is zero (the default) then the server will stop immediately. A value larger than zero means the server will wait up to this many seconds for all active requests to finish. A value smaller than zero means that the server will wait indefinitely for all active requests to finish.
server-group.stop-servers.timeout=The graceful shutdown timeout. If this is zero then a graceful shutdown will not be attempted, if this is -1 then the server will wait for a graceful shutdown indefinitely.
server-group.stop-servers.timeout.deprecated=Use suspend-timeout instead.
server-group.suspend-servers=Suspends operations on all servers in the server group. All current operations will be allowed to finish, and new operations will be rejected.
server-group.suspend-servers.suspend-timeout=The suspend operation timeout in seconds. If this is zero (the default) the operation will return immediately. A value larger than zero means the operation will wait up to this many seconds to complete before returning. A value smaller than zero means that the operation will wait indefinitely for all active requests to finish. Note that the operation will not roll back if the timeout is exceeded, it just means that not all current requests completed in the specified timeout.
server-group.suspend-servers.timeout=Timeout in seconds. If this is zero the operation will return immediately, -1 means that it will wait indefinitely. Note that the operation will not roll back if the timeout is exceeded, it just means that not all current requests completed in the specified timeout.
server-group.suspend-servers.timeout.deprecated=Use suspend-timeout instead.
server-group.resume-servers=Resumes operations on all servers in the server group
server-group.kill-servers=Kill all server processes in the server group. In case the server is not in the stopping state, it will attempt to stop the server first. This operation may not work on all platforms and will try to destroy the process if not available.
server-group.destroy-servers=Destroy the server processes in the server group. In case the server is not in the stopping state, it will attempt to stop the server first.

server-group.deployment-overlay=Links between a defined deployment overlay and deployments in this server group
server-group.deployment-overlay.add=Adds a link to a deployment overlay
server-group.deployment-overlay.redeploy-links=Redeploys the deployments affected by this overlay
server-group.deployment-overlay.redeploy-links.deployments=List of deployment runtime names to be redeployed. If this list is empty or 'undefined' then all affected deployments will be redeployed.
server-group.deployment-overlay.remove=Removes a link to a deployment overlay
server-group.deployment-overlay.deployment=A deployment that this overlay is applied to
server-group.deployment-overlay.deployment.add=Adds a link between a deployment and this overlay
server-group.deployment-overlay.deployment.remove=Removes a link between a deployment and this overlay
server-group.deployment-overlay.deployment.remove.redeploy-affected=If set to 'true', redeploy the deployments affected by this overlay after removal.
server-group.deployment-overlay.deployment.regular-expression=If this deployment name should be treated as a regular expression

host-exclude=Configuration of resources that should be hidden by the Domain Controller from a secondary Host Controller that is running a particular version.
host-exclude.add=Adds a host-ignore configuration. The add does not affect any currently register hosts.
host-exclude.remove=Removes a host-ignore configuration. The remove does not affect any currently register hosts.
host-exclude.management-major-version=The major version of the kernel management API that is supported by secondary hosts that should be affected by this configuration.
host-exclude.management-minor-version=The minor version of the kernel management API that is supported by secondary hosts that should be affected by this configuration.
host-exclude.management-micro-version=The micro version of the kernel management API that is supported by secondary hosts that should be affected by this configuration. If not defined, this configuration applies to all releases of the given major/minor version, excluding any for which a different configuration with a micro version also specified is present.
host-exclude.host-release=A shorthand identifier for a well known EAP or WildFly Core based software distribution that a secondary Host Controller is running that should be affected by this configuration. Used as a simpler alternative to specifying the kernel management API versions.
host-exclude.excluded-extensions=A list of extension names the resources for which (/extension=X) should be hidden from the target hosts.
host-exclude.active-server-groups=A list of server group names the resources associated with which should be hidden from the target hosts. These are the groups used by the host's servers. The server-group and related profile, socket-binding-group and deployment resources will not be hidden; all others will be hidden.
host-exclude.active-socket-binding-groups=A list of socket-binding-group names specifying all the socket binding groups that are used by servers running on the target hosts. Only used if 'active-server-groups' is set;  otherwise ignored. Only needs to be set if the socket binding groups specified in the configuration of the server groups listed in 'active-server-groups' isn't the complete set of socket binding groups used on the servers (i.e. some other socket binding groups are specified in the target hosts' 'server-config' resources.)

rollout-plans=Storage information about a set of named management update rollout plans useful to management clients that are stored in the domain content repository. The child resources under this resource provide access to these plans to management clients, allowing clients to use the plans by referencing them by name, avoiding the need to recreate them for each use.
rollout-plans.hash=The hash of all stored rollout plans. Used internally by host controllers to locate rollout plan content.
rollout-plans.add=Adds the capability to store named rollout plans.
rollout-plans.remove=Removes the capability to store named rollout plans.
rollout-plan=A stored rollout plan.
rollout-plan.hash=The hash of the rollout plan content.
rollout-plan.content=The rollout plan content, in JBoss DMR form.
rollout-plan.add=Adds a rollout plan to the persistent store.
rollout-plan.remove=Removes a rollout plan from the persistent store.
rollout-plan.store=Updates the content of an existing persisted rollout plan, after first checking that the provided 'hash' parameter matches the current rollout plan hash. Fails if the hashes do not match. Using this operation instead of the 'write-attribute' operation for the 'content' attribute provides a guarantee that the update will not conflict with a previous update unknown to the caller.
rollout-plan.store.hash=The value the caller believes to be the hash of the rollout plan content that is being replaced.
rollout-plan.store.content=The updated rollout plan content, in JBoss DMR form.

# Misc
domain.resolve-expression-on-domain=Operation that accepts an expression as input (or a string that can be parsed into an expression) and resolves it against the local system properties and environment variables on all servers in the domain.
domain.resolve-expression-on-domain.expression=The expression to resolve.
domain.resolve-expression-on-domain.reply=The resolved expression, or the string form of the original input value if it did not represent an expression.

# secondary host info
host-connection=Information about the connection state of a secondary host controller.
host-connection.connected=Whether the host controller is connected or not.
host-connection.events=The secondary host events.
host-connection.events.address=The secondary host address if available.
host-connection.events.timestamp=The time of the event.
host-connection.events.type=The state of the host-controller connection.
host-connection.prune-expired=Prune the expired host event entries.
host-connection.prune-disconnected=Prune information about all disconnected hosts.
