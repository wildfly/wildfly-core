<!--
  ~ Copyright The WildFly Authors
  ~ SPDX-License-Identifier: Apache-2.0
  -->

<!-- for needs of RealmsTestCase -->
<subsystem xmlns="urn:wildfly:elytron:18.0" initial-providers="elytron">
    <providers>
        <provider-loader name="elytron" class-names="org.wildfly.security.WildFlyElytronProvider" />
    </providers>
    <security-domains>
        <security-domain name="TestDomain1" default-realm="ClearPropertyRealm" permission-mapper="ConstantPermissionMapper">
            <realm name="ClearPropertyRealm" role-mapper="NonKeepingMappedRoleMapper" role-decoder="GroupsToRoles"/>
        </security-domain>
        <security-domain name="TestDomain2" default-realm="ClearPropertyRealm" permission-mapper="ConstantPermissionMapper">
            <realm name="ClearPropertyRealm" role-mapper="KeepMappedRoleMapper" role-decoder="GroupsToRoles"/>
        </security-domain>
        <security-domain name="TestDomain3" default-realm="ClearPropertyRealm" permission-mapper="ConstantPermissionMapper">
            <realm name="ClearPropertyRealm" role-mapper="KeepNonMappedRoleMapper" role-decoder="GroupsToRoles"/>
        </security-domain>
        <security-domain name="TestDomain4" default-realm="ClearPropertyRealm" permission-mapper="ConstantPermissionMapper">
            <realm name="ClearPropertyRealm" role-mapper="KeepBothMappedRoleMapper" role-decoder="GroupsToRoles"/>
        </security-domain>
        <security-domain name="TestDomain5" default-realm="ClearPropertyRealm" permission-mapper="ConstantPermissionMapper">
            <realm name="ClearPropertyRealm" role-mapper="MyRegexMapper" role-decoder="GroupsToRoles"/>
        </security-domain>
        <security-domain name="TestDomain6" default-realm="ClearPropertyRealm" permission-mapper="ConstantPermissionMapper">
            <realm name="ClearPropertyRealm" role-mapper="MyRegexMapper2" role-decoder="GroupsToRoles"/>
        </security-domain>
        <security-domain name="TestDomain7" default-realm="ClearPropertyRealm" permission-mapper="ConstantPermissionMapper">
            <realm name="ClearPropertyRealm" role-mapper="MyRegexMapper3" role-decoder="GroupsToRoles"/>
        </security-domain>
        <security-domain name="TestDomain8" default-realm="ClearPropertyRealm" permission-mapper="ConstantPermissionMapper">
            <realm name="ClearPropertyRealm" role-mapper="MyRegexMapper4" role-decoder="GroupsToRoles"/>
        </security-domain>
        <security-domain name="TestDomain9" default-realm="ClearPropertyRealm" permission-mapper="ConstantPermissionMapper">
            <realm name="ClearPropertyRealm" role-mapper="MyRegexMapper5" role-decoder="GroupsToRoles"/>
        </security-domain>
        <security-domain name="TestDomain10" default-realm="ClearPropertyRealm" permission-mapper="ConstantPermissionMapper">
            <realm name="ClearPropertyRealm" role-mapper="AggregateRoleMapper1" role-decoder="GroupsToRoles"/>
        </security-domain>
    </security-domains>
    <security-realms>
        <properties-realm name="ClearPropertyRealm">
            <users-properties path="users-clear.properties"  relative-to="jboss.server.config.dir" plain-text="true" />
            <groups-properties path="groups.properties" relative-to="jboss.server.config.dir" />
        </properties-realm>
    </security-realms>
    <mappers>
        <constant-permission-mapper name="ConstantPermissionMapper">
            <permission-set name="login-permission"/>
        </constant-permission-mapper>
        <simple-role-decoder attribute="groups" name="GroupsToRoles"/>
        <aggregate-role-mapper name="AggregateRoleMapper1">
            <role-mapper name="MyRegexMapper2" />
            <role-mapper name="MappedRoleMapperUserToAdmin" />
        </aggregate-role-mapper>
        <mapped-role-mapper name="NonKeepingMappedRoleMapper" keep-mapped="false" keep-non-mapped="false">
            <role-mapping from="firstGroup" to="mappedGroup"/>
            <role-mapping from="dontMap" to="notInThisGroup"/>
        </mapped-role-mapper>
        <mapped-role-mapper name="KeepMappedRoleMapper" keep-mapped="true" keep-non-mapped="false">
            <role-mapping from="firstGroup" to="mappedGroup"/>
            <role-mapping from="dontMap" to="notInThisGroup"/>
        </mapped-role-mapper>
        <mapped-role-mapper name="KeepNonMappedRoleMapper" keep-mapped="false" keep-non-mapped="true">
            <role-mapping from="firstGroup" to="mappedGroup"/>
            <role-mapping from="dontMap" to="notInThisGroup"/>
        </mapped-role-mapper>
        <mapped-role-mapper name="KeepBothMappedRoleMapper" keep-mapped="true" keep-non-mapped="true">
            <role-mapping from="firstGroup" to="mappedGroup"/>
            <role-mapping from="dontMap" to="notInThisGroup"/>
        </mapped-role-mapper>
        <mapped-role-mapper name="MappedRoleMapperUserToAdmin" keep-mapped="false" keep-non-mapped="true">
            <role-mapping from="user" to="admin"/>
        </mapped-role-mapper>
        <regex-role-mapper name="MyRegexMapper" pattern=".*-(user)" replacement="application-$1"/>
        <regex-role-mapper name="MyRegexMapper2" pattern=".*-([a-zA-Z]*)-.*" replacement="$1" keep-non-mapped="false"/>
        <regex-role-mapper name="MyRegexMapper3" pattern=".*-([a-zA-Z]*)-.*" replacement="$1" keep-non-mapped="true"/>
        <regex-role-mapper name="MyRegexMapper4" pattern="user" replacement="admin" keep-non-mapped="false" replace-all="true"/>
        <regex-role-mapper name="MyRegexMapper5" pattern="^user$" replacement="admin" keep-non-mapped="false" replace-all="true"/>
    </mappers>
    <permission-sets>
        <permission-set name="login-permission">
            <permission class-name="org.wildfly.security.auth.permission.LoginPermission"/>
        </permission-set>
    </permission-sets>
</subsystem>
