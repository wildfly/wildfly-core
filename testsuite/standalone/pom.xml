<?xml version="1.0" encoding="UTF-8"?>

<!--
  Set these VM properties in your IDE debugger (replace ${VERSION} with actual project version)

  -Djava.util.logging.manager=org.jboss.logmanager.LogManager
  -Djboss.home=${workspace_loc:wildfly-build}/target/wildfly-${VERSION}
  -DallowConnectingToRunningServer=true
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly.core</groupId>
        <artifactId>wildfly-core-testsuite</artifactId>
        <version>14.0.0.Beta3-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>wildfly-core-testsuite-standalone</artifactId>
    <name>WildFly Core Test Suite: Standalone Integration Tests</name>

    <properties>
        <jbossas.ts.integ.dir>${basedir}/..</jbossas.ts.integ.dir>
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <jbossas.project.dir>${jbossas.ts.dir}</jbossas.project.dir>
        <wildfly.home>${project.basedir}/target/wildfly-core</wildfly.home>

        <ts.elytron.cli>enable-elytron.cli</ts.elytron.cli>

        <exclude.tests>nothing-to-exclude</exclude.tests>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-test-runner</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-testsuite-shared</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-model-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-model-test-framework</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-threads</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.json</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-vault-test-galleon-pack</artifactId>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-jmx</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk15on</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-netty</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>${exclude.tests}</exclude>
                    </excludes>
                    <failIfNoTests>false</failIfNoTests>
                    <!-- parallel>none</parallel -->
                    <redirectTestOutputToFile>${testLogToFile}</redirectTestOutputToFile>

                    <!-- System properties to forked surefire JVM which runs clients. -->
                    <argLine>${jvm.args.ip.client} ${jvm.args.timeouts} ${surefire.system.args} -Djava.util.logging.manager=org.jboss.logmanager.LogManager</argLine>

                    <environmentVariables>
                        <JBOSS_HOME>${wildfly.home}</JBOSS_HOME>
                    </environmentVariables>

                    <systemPropertyVariables>
                        <cli.jvm.args>${modular.jdk.args} -Dmaven.repo.local=${settings.localRepository}</cli.jvm.args>
                        <jboss.home>${wildfly.home}</jboss.home>
                        <!-- This is required so JBoss Modules knows which repository to use -->
                        <maven.repo.local>${settings.localRepository}</maven.repo.local>
                        <jvm.args>-Dmaven.repo.local=${settings.localRepository} ${surefire.system.args} ${jvm.args.ip.server} ${jvm.args.security} ${jvm.args.other} ${jvm.args.timeouts} -Djbossas.ts.dir=${jbossas.ts.dir}</jvm.args>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jboss.galleon</groupId>
                <artifactId>galleon-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>server-provisioning</id>
                        <goals>
                            <goal>provision</goal>
                        </goals>
                        <phase>process-test-resources</phase>
                        <configuration>
                            <install-dir>${project.build.directory}/${server.output.dir.prefix}</install-dir>
                            <record-state>false</record-state>
                            <log-time>${galleon.log.time}</log-time>
                            <offline>true</offline>
                            <plugin-options>
                                <jboss-maven-dist/>
                                <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                            </plugin-options>
                            <feature-packs>
                                <feature-pack>
                                    <groupId>org.wildfly.core</groupId>
                                    <artifactId>wildfly-core-galleon-pack</artifactId>
                                    <version>${project.version}</version>
                                    <inherit-configs>false</inherit-configs>
                                    <included-configs>
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone.xml</name>
                                        </config>
                                    </included-configs>
                                    <excluded-packages>
                                        <name>product.conf</name>
                                    </excluded-packages>
                                </feature-pack>
                            </feature-packs>
                            <custom-config>${basedir}/src/test/resources/fp-config.xml</custom-config>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${version.antrun.plugin}</version>
                <executions>
                    <execution>
                        <phase>process-test-resources</phase>
                        <configuration>
                            <target>
                                <copy file="${project.build.testOutputDirectory}/wildfly/standalone/configuration/mgmt-users.properties" todir="${project.build.directory}/wildfly-core/standalone/configuration" overwrite="true" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <!-- Test against slimmed servers provisioned by Galleon -->
        <profile>
            <id>layers.profile</id>
            <activation>
                <property>
                    <name>ts.layers</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jboss.galleon</groupId>
                        <artifactId>galleon-maven-plugin</artifactId>
                        <executions>
                            <!-- Disable the default provisioning -->
                            <execution>
                                <id>server-provisioning</id>
                                <goals>
                                    <goal>provisioning</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                            <!-- Provision a server with the core functionality we will provide in OpenShift images -->
                            <execution>
                                <id>slimmed-server-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <install-dir>${project.build.directory}/${server.output.dir.prefix}</install-dir>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>true</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                        <optional-packages>passive+</optional-packages>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>org.wildfly.core</groupId>
                                            <artifactId>wildfly-core-galleon-pack</artifactId>
                                            <version>${project.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                            <!-- Specifically include patching -->
                                            <included-packages>
                                                <name>org.jboss.as.patching.cli</name>
                                            </included-packages>
                                            <excluded-packages>
                                                <name>product.conf</name>
                                            </excluded-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <configurations>
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone.xml</name>
                                            <layers>
                                                <layer>core-server</layer>
                                                <layer>core-tools</layer>
                                                <layer>deployment-scanner</layer>
                                            </layers>
                                        </config>
                                    </configurations>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <!-- Tests against the slimmed install -->
                            <execution>
                                <id>slimmed-server-surefire</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <excludes>
                                        <!-- Manipulates the discovery subsystem, which isn't installed, and tries
                                            to remove elytron capabilities that the installed config requires -->
                                        <exclude>org.wildfly.core.test.standalone.mgmt.api.core.ReadConfigAsFeaturesStandaloneTestCase.java</exclude>
                                        <!-- Manipulates the legacy security realm ManagementRealm.
                                             TODO determine if we want that used for management in this installation -->
                                        <exclude>org.jboss.as.test.integration.credential.store.ManagementAuthenticationUsersTestCase.java</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Test against bootable jar -->
        <profile>
            <id>bootablejar.profile</id>
            <activation>
                <property>
                    <name>ts.bootable</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jboss.galleon</groupId>
                        <artifactId>galleon-maven-plugin</artifactId>   
                        <executions>
                            <!-- Disable the default provisioning -->
                            <execution>
                                <id>server-provisioning</id>
                                <goals>
                                    <goal>provisioning</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-jar-maven-plugin</artifactId>
                        <executions>
                            <!-- Provision a server with the core functionality we will provide in OpenShift images -->
                            <execution>
                                <id>bootable-jar-packaging</id>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <output-file-name>test-wildfly.jar</output-file-name>
                                    <hollowJar>true</hollowJar>
                                    <extra-server-content-dirs>
                                        <dir>${project.basedir}/src/test/resources/wildfly</dir>
                                    </extra-server-content-dirs>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>true</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>org.wildfly.core</groupId>
                                            <artifactId>wildfly-core-galleon-pack</artifactId>
                                            <version>${project.version}</version>
                                            <!-- Specifically include patching -->
                                            <included-packages>
                                                <name>org.jboss.as.patching.cli</name>
                                            </included-packages>
                                            <excluded-packages>
                                                <name>product.conf</name>
                                            </excluded-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <layers>
                                        <layer>core-server</layer>
                                        <layer>core-tools</layer>
                                        <layer>deployment-scanner</layer>
                                    </layers>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <!-- Tests against the bootable jar -->
                            <execution>
                                <id>bootable-server-surefire</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <systemProperties>
                                        <property>
                                            <name>wildfly.bootable.jar</name>
                                            <value>true</value>
                                        </property>
                                        <property>
                                            <name>wildfly.bootable.jar.jar</name>
                                            <value>${project.build.directory}/test-wildfly.jar</value>
                                        </property>
                                        <property>
                                            <name>wildfly.bootable.jar.install.dir</name>
                                            <value>${project.build.directory}/${server.output.dir.prefix}</value>
                                        </property>
                                    </systemProperties>
                                    <excludes>
                                        <!-- Manipulates the discovery subsystem, which isn't installed, and tries
                                            to remove elytron capabilities that the installed config requires -->
                                        <exclude>org.wildfly.core.test.standalone.mgmt.api.core.ReadConfigAsFeaturesStandaloneTestCase.java</exclude>
                                        <!-- Manipulates the legacy security realm ManagementRealm.
                                             TODO determine if we want that used for management in this installation -->
                                        <exclude>org.jboss.as.test.integration.credential.store.ManagementAuthenticationUsersTestCase.java</exclude>
                                        <!-- testcase in admin mode -->
                                        <exclude>org.jboss.as.test.integration.management.console.WebConsoleRedirectionTestCase.java</exclude>
                                        <!-- No snapshot, readonly config -->
                                        <exclude>org.wildfly.core.test.standalone.mgmt.api.ModelPersistenceTestCase.java</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

         <!-- profile to configure WildFly to use Elytron instead of legacy security: -Delytron -->
         <profile>
             <id>elytron.profile</id>
             <activation>
                 <property>
                     <name>elytron</name>
                 </property>
                 <file>
                     <exists>${ts.elytron.cli}</exists>
                 </file>
             </activation>
             <properties>
                 <exclude.tests>org.jboss.as.test.integration.credential.store.ManagementAuthenticationUsersTestCase.java,org.wildfly.core.test.standalone.mgmt.api.core.ReadConfigAsFeaturesStandaloneTestCase.java</exclude.tests>
             </properties>
             <build>
                 <plugins>
                     <plugin>
                         <groupId>org.wildfly.plugins</groupId>
                         <artifactId>wildfly-maven-plugin</artifactId>
                         <version>${version.wildfly.plugin}</version>
                         <executions>
                             <execution>
                                 <phase>process-test-resources</phase>
                                 <goals>
                                     <goal>execute-commands</goal>
                                 </goals>
                             </execution>
                         </executions>
                         <configuration>
                             <offline>true</offline>
                             <scripts>
                                 <script>${ts.elytron.cli}</script>
                             </scripts>
                             <jboss-home>${project.build.directory}/${server.output.dir.prefix}</jboss-home>
                             <stdout>${project.build.directory}/wildfly-plugin.log</stdout>
                             <java-opts>${modular.jdk.args}</java-opts>
                             <system-properties>
                                 <maven.repo.local>${settings.localRepository}</maven.repo.local>
                                 <module.path>${jboss.dist}/modules</module.path>
                             </system-properties>
                         </configuration>
                     </plugin>
                 </plugins>
             </build>
         </profile>

     </profiles>

</project>
