<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright The WildFly Authors
  ~ SPDX-License-Identifier: Apache-2.0
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly.core</groupId>
        <artifactId>wildfly-core-testsuite-unstable-api-annotation</artifactId>
        <version>28.0.1.Final</version>
    </parent>

    <artifactId>wildfly-core-testsuite-unstable-api-annotation-tests</artifactId>
    <packaging>jar</packaging>

    <name>WildFly Core Test Suite: Unstable API Annotation Tests</name>

    <properties>
        <jbossas.ts.integ.dir>${basedir}/..</jbossas.ts.integ.dir>
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <jbossas.project.dir>${jbossas.ts.dir}</jbossas.project.dir>
        <wildfly.home>${project.basedir}/target/wildfly-core</wildfly.home>
        <exclude.tests>nothing-to-exclude</exclude.tests>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>${exclude.tests}</exclude>
                    </excludes>
                    <failIfNoTests>false</failIfNoTests>
                    <!-- parallel>none</parallel -->

                    <!-- System properties to forked surefire JVM which runs clients. -->
                    <argLine>${jvm.args.ip.client} ${jvm.args.timeouts} ${surefire.system.args} -Djava.util.logging.manager=org.jboss.logmanager.LogManager</argLine>

                    <environmentVariables>
                        <JBOSS_HOME>${wildfly.home}</JBOSS_HOME>
                        <!-- Used in one of the tests -->
                        <TEST_ENVIRONMENT_VARIABLE>Hello world</TEST_ENVIRONMENT_VARIABLE>
                    </environmentVariables>

                    <systemPropertyVariables>
                        <cli.jvm.args>${modular.jdk.args} -Dmaven.repo.local=${settings.localRepository}</cli.jvm.args>
                        <jboss.home>${wildfly.home}</jboss.home>
                        <!-- This is required so JBoss Modules knows which repository to use -->
                        <maven.repo.local>${settings.localRepository}</maven.repo.local>
                        <jvm.args>-Dmaven.repo.local=${settings.localRepository} ${surefire.system.args} ${jvm.args.ip.server} ${jvm.args.security} ${jvm.args.other} ${jvm.args.timeouts} -Djbossas.ts.dir=${jbossas.ts.dir}</jvm.args>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>server-provisioning</id>
                        <goals>
                            <goal>provision</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <provisioning-dir>${project.build.directory}/${server.output.dir.prefix}</provisioning-dir>
                            <record-provisioning-state>false</record-provisioning-state>
                            <log-provisioning-time>${galleon.log.time}</log-provisioning-time>
                            <offline-provisioning>true</offline-provisioning>
                            <overwrite-provisioned-server>true</overwrite-provisioned-server>
                            <galleon-options>
                                <jboss-maven-dist/>
                                <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                <optional-packages>passive+</optional-packages>
                            </galleon-options>
                            <feature-packs>
                                <feature-pack>
                                    <groupId>org.wildfly.core</groupId>
                                    <artifactId>wildfly-core-galleon-pack</artifactId>
                                    <version>${project.version}</version>
                                    <inherit-configs>false</inherit-configs>
                                    <inherit-packages>false</inherit-packages>
                                    <!-- Specifically include patching -->
                                    <included-packages>
                                        <name>org.jboss.as.patching.cli</name>
                                    </included-packages>
                                    <excluded-packages>
                                        <name>product.conf</name>
                                    </excluded-packages>
                                </feature-pack>
                                <feature-pack>
                                    <groupId>org.wildfly.core</groupId>
                                    <artifactId>wildfly-core-testsuite-unstable-api-annotation-feature-pack</artifactId>
                                    <version>${project.version}</version>
                                    <inherit-configs>false</inherit-configs>
                                    <inherit-packages>false</inherit-packages>
                                </feature-pack>
                            </feature-packs>
                            <layers>
                                <layer>core-server</layer>
                                <layer>core-tools</layer>
                                <layer>deployment-scanner</layer>
                                <layer>unstable-api-annotation-test</layer>
                            </layers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>wildfly-core-testsuite-unstable-api-annotation-feature-pack</artifactId>
            <type>zip</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-management-subsystem</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>layers.profile</id>
            <activation>
                <property>
                    <name>ts.layers</name>
                </property>
            </activation>
            <!-- THis just uses the standard provisioning, which uses layers -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <!-- Tests against the slimmed install -->
                            <execution>
                                <id>slimmed-server-surefire</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <excludes>
                                        <!-- Manipulates the discovery subsystem, which isn't installed, and tries
                                            to remove elytron capabilities that the installed config requires -->
                                        <exclude>org.wildfly.core.test.standalone.mgmt.api.core.ReadConfigAsFeaturesStandaloneTestCase.java</exclude>
                                        <!-- Manipulates the legacy security realm ManagementRealm.
                                             TODO determine if we want that used for management in this installation -->
                                        <exclude>org.jboss.as.test.integration.credential.store.ManagementAuthenticationUsersTestCase.java</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Test against bootable jar -->
        <profile>
            <id>bootablejar.profile</id>
            <activation>
                <property>
                    <name>ts.bootable</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <executions>
                            <!-- Disable the default provisioning -->
                            <execution>
                                <id>server-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>bootable-jar-packaging</id>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <overwrite-provisioned-server>true</overwrite-provisioned-server>
                                    <bootableJar>true</bootableJar>
                                    <skipDeployment>true</skipDeployment>
                                    <bootableJarName>test-wildfly.jar</bootableJarName>
                                    <record-provisioning-state>false</record-provisioning-state>
                                    <log-provisioning-time>${galleon.log.time}</log-provisioning-time>
                                    <offline-provisioning>true</offline-provisioning>
                                    <galleon-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                    </galleon-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>org.wildfly.core</groupId>
                                            <artifactId>wildfly-core-galleon-pack</artifactId>
                                            <version>${project.version}</version>
                                        </feature-pack>
                                        <feature-pack>
                                            <groupId>org.wildfly.core</groupId>
                                            <artifactId>wildfly-core-testsuite-unstable-api-annotation-feature-pack</artifactId>
                                            <version>${project.version}</version>
                                        </feature-pack>
                                    </feature-packs>
                                    <layers>
                                        <layer>core-server</layer>
                                        <layer>core-tools</layer>
                                        <layer>deployment-scanner</layer>
                                        <layer>unstable-api-annotation-test</layer>
                                    </layers>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <!-- Tests against the bootable jar -->
                            <execution>
                                <id>bootable-server-surefire</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <wildfly.bootable.jar>true</wildfly.bootable.jar>
                                        <wildfly.bootable.jar.jar>${project.build.directory}/test-wildfly.jar</wildfly.bootable.jar.jar>
                                        <wildfly.bootable.jar.install.dir>${project.build.directory}/${server.output.dir.prefix}</wildfly.bootable.jar.install.dir>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
