
# JBoss, Home of Professional Open Source.
# Copyright 2016, Red Hat, Inc., and individual contributors
# as indicated by the @author tags. See the copyright.txt file in the
# distribution for a full listing of individual contributors.
#
# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.

# Command help content. Each command can define:
# <parent command> is not present for top level command.
# <parent command>.<command name>.description
# <parent command>.<command name>.synopsis
# <parent command>.<command name>.arguments.description
# <parent command>.<command name>.arguments.value (to be used in synopsis).
# <parent command>.<command name>.option.<option name>.description
# <parent command>.<command name>.option.<option name>.value (to be used in synopsis).
# Warning, providing a synopsis can lead to help being not in sync with actual implementation
attachment.description=\
Display or save the content of the attachments located in the operation response.

attachment.display.description=\
Display the content of the attachments located in the operation response.

attachment.display.option.operation.description=\
Mandatory, the operation that returns attachments.

attachment.display.option.operation.value=operation

attachment.save.description=\
Save the content of the attachments located in the operation response. If no \
--file option is provided, the attachment is saved in the CLI working \
directory, the attachment uuid being used as the file name. If multiple attachments \
are returned, the attachments are saved using the file name + an index. If \
--overwrite is present, then any existing file will be overwritten.

attachment.save.option.file.description=\
Optional, the path of file used to save the attachments.

attachment.save.option.file.value=file path

attachment.save.option.overwrite.description=\
optional, used when saving to a file. Will make the received file to overwrite \
existing file.

cd.description=\
Changes the current node path to the argument.\n\
The current node path is used as the address for operation requests that \
don't contain the address part. If an operation request does include the \
address, the included address is considered relative to the current node \
path. The current node path may end on a node-type. In that case, \
to execute an operation specifying a node-name would be sufficient \
(e.g. logging:read-resource).

cd.arguments.description=\
The new value for the current node path following the format:\n\
\   [node-type [=node-name (,node-type[=node-name])*]].\n\
The following navigation signs are supported in the node path:\n\
\    /      - the root node (e.g. 'cd /' or 'cd /some=thing');\n\
\    ..     - parent node (e.g. 'cd ..');\n\
\    t.type  - node type of the current node (e.g. 'cd .type').

cd.arguments.value=node path

cd.option.no-validation.description=\
Normally (when --no-validation is not present on the line), \
before switching to the node_path, the node_path is \
validated to make sure that it actually exists. \
In some cases, like batches, the validation may get \
in the way because the target address might not yet exist. \
If --no-validation is present the current context address \
will be set to the node_path without validating it.

clear.description=Clears the screen.

command-timeout.description=\
get, set or reset the command timeout. By default there is no timeout.

command-timeout.get.description=\
Retrieves and print the currently set timeout. A timeout of 0 means no timeout.

command-timeout.reset.description=\
Reset the timeout to the default or CLI configuration value.

command-timeout.reset.arguments.description=\
Reset value, can be config or default.

command-timeout.reset.arguments.value=config|default

command-timeout.set.description=\
Set the timeout to a number of seconds.

command-timeout.set.arguments.description=\
The timeout in seconds.

command-timeout.set.arguments.value=num seconds

connect.description=\
Connects to the controller on the specified host and port using the specified \
protocol. The default values can be customized by specifying the desired defaults \
as command line arguments when launching the CLI. E.g.\n\
jboss-cli.sh --controller=http-remoting://controller-host.net:1234\n\
\n\
The host may be any of these formats:\n\
\  - a host name, e.g. localhost\n\
\  - an IPv4 address, e.g. 127.0.0.1\n\
\  - an IPv6 address, e.g. [::1]\n\
\n\
Controller addresses can be aliased and stored in the jboss-cli.xml config file.\
Aliases can later be used as arguments for the connect command.

connect.arguments.description=Optional, URL of the server to connect too. See synopsis \
for URL format.

connect.arguments.value=controller_alias|[http-remoting|https-remoting]://[host][:port]

connect.option.bind.description=Client bind address.

connect.option.bind.value=bind address

connection-info.description=\
Prints information about the current connection to the server. The information \
is username and date and hour since the user is logged in. If it is an SSL \
connection it also prints the server certificate as: subject, issuer, validity, \
SHA1 and MD5 fingerprint.

help.description=\
Print the commands and operations help content.\n\
Use completion to discover commands and operations. \
Here are some of the most basic supported commands:\n\
\n\
cn (or cd)    - change the current node path to the argument.\n\
connect       - connect to the server or domain controller.\n\
deployment    - deployment actions.\n\
history       - print or disable/enable/clear the history expansion.\n\
ls            - list the contents of the node path.\n\
pwn (or pwd)  - prints the current working node.\n\
quit (or q)   - quit the command line interface.\n\
version       - prints the version and environment information.\n\

help.arguments.description=The command or operation name.

help.arguments.value=<command or operation name>

ls.description=\
Lists the contents of a node path. Which includes node types and attributes, \
if the node path ends on a node name, or node names if the node path ends on \
a node type.

ls.arguments.description=\
(optional) the node path the contents of which to print. \
If not specified, the contents of the current node path (indicated \
in the prompt) will be printed. The node path can end on either \
node type (in this case the contents will be the child node names) \
or the node name (in this case the contents will be the child node \
types and attributes). If the node path has no contents, nothing \
will be printed.\n\
\n\
If specified, the node-path is expected to follow format:\n\
[node-type [=node-name (,node-type[=node-name])*]].\n\
The following navigation signs are supported in the node-path:\n\
\ /      - the root node (e.g. 'cd /' or 'cd /some=thing')\n\
\ ..     - parent node (e.g. 'cd ..')\n\
\ .type  - node type of the current node (e.g. 'cd .type').

ls.arguments.value=node path

ls.option.headers.description=\
(optional) a list of operation headers separated by a semicolon. For the list of \
supported headers, please, refer to the domain management documentation or use \
tab-completion.

ls.option.headers.value={headers}

ls.option.l.description=\
(optional) by default the result consists of a list of names and \
is printed in columns using the whole width of the terminal. \
If the node path ends on a node name, the -l switch will print two \
tables:\n\
\ - one for attributes displaying the name, value and type of the\n\
\   attributes.\n\
\- one for child types displaying the type name, min and max\n\
\  allowed occurrences of instances of those types in the domain\n\
\  configuration.\n\
If the node path ends on a node type, the -l switch will print all \
the available child names one per line, i.e. in a column.

ls.option.resolve-expressions.description=\
Resolves the expressions in the returned attributes to their values on the server. \
In domain mode the argument is only available at /host=*/path=*, /host=*/interface=*, \
and host=*/server=* locations in the configuration.

ls.option.resolve-expressions.value=true|false

ls.option.<attribute-description-property>.description=\
(optional) by default, -l will display attribute name, value and type.\
Full attribute description (which you can see by executing 'read-attribute \
<attribute-name> --verbose') includes more properties. To include those into \
the 'ls -l' results, just list those properties as arguments to the ls command \
prefixing their names with '--'.\n\
E.g. 'ls -l --nillable --storage'.

pwd.description=\
Prints the full node path of the current working node.

quit.description=\
Terminates the command line session.

version.description=\
Print the CLI version information.

