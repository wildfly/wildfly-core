
# JBoss, Home of Professional Open Source.
# Copyright 2017, Red Hat, Inc., and individual contributors
# as indicated by the @author tags. See the copyright.txt file in the
# distribution for a full listing of individual contributors.
#
# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.

batch.description=\
Actions to send commands to server in batch.

batch.clear.description=\
Removes all the existing command lines from the currently active batch.\
The CLI stays in the batch mode after the command is executed.

batch.discard.description=\
Discards the currently active batch. All the commands added to the batch will be \
removed, the batch will be discarded and the CLI will exit the batch mode.

batch.edit-line.description=\
Replaces existing command line from the currently active batch with the \
specified line number with the new one.

batch.edit-line.arguments.description=\
The new value for the command line which will replace the current one. \
The new command must be available for the batch, i.e. this command must \
translate into an operation (or operations). (Commands like cd, pwd, connect, \
etc are not allowed in the batch, since they don't translate into operations). \
If the new command line isn't valid for some reason (syntax error or invalid \
arguments), edit-batch-line will fail and the current command line won't be \
replaced with the invalid one.

batch.edit-line.arguments.value=new command line

batch.edit-line.option.line-number.description=\
The line number of the existing command line in the batch. Line numbers start \
with 1. So, the value of the argument must be in the range from 1 to the number \
of the last command in the batch.
batch.edit-line.option.line-number.value=line number

batch.holdback.description=\
Saves the currently active batch and exits the batch mode w/o executing the batch. \
The held back batch can later be re-activated by invoking batch commands.

batch.holdback.arguments.description=\
Optional, the name under which to store the batch. If the name isn't provided, \
the batch will be saved unnamed. If the holdback name is provided, the name must \
be unique. If there already is a held back batch with the same name, holdback-batch \
will fail and the CLI will stay in the batch mode.

batch.holdback.arguments.value=holdback name

batch.list.description=\
Lists all the commands in the currently active batch. The CLI must be in the batch \
mode when this command in invoked.

batch.list-holdbacks.description=\
Prints a list of currently held back batches.

batch.load-file.description=\
Create a new batch and feeds it with commands contained in the provided file.

batch.load-file.arguments.description=\
A file system path to a file containing commands and operations that should be \
added to the batch.

batch.load-file.arguments.value=file

batch.move-line.description=\
Moves existing line from the specified position to the new position shifting the \
lines between the specified positions.

batch.move-line.option.current-line-number.description=\
The line number of the existing command line in the batch that should be moved. \
Line numbers start with 1.

batch.move-line.option.new-line-number.description=\
The new line number the command line should be moved to. It should be in the \
range from 1 to the line number of the last command in the batch.

batch.new.description=\
Starts the batch mode by creating a new batch.

batch.re-activate.description=Re-activate an heldback batch.

batch.re-activate.arguments.description=The name of a held back batch.

batch.re-activate.arguments.value=held back batch

batch.remove-line.description=\
Removes an existing command line specified with line number argument from the \
currently active batch.

batch.remove-line.arguments.description=\
The line number of the existing command line in the batch that should be removed \
from the batch. Line numbers start with 1.

batch.remove-line.arguments.value=line number

batch.run.description=\
The command must be executed while in the batch mode. It will run the currently \
active batch. If the batch executed successfully, the executed batch will be \
discarded and the CLI will exit the batch mode. Otherwise, if there was an error, \
the CLI will remain in the batch mode to let the user modify the batch and run it again.

batch.run.option.verbose.description=\
Prints the full response from the controller for the executed batch.

batch.run.option.headers.description=\
A list of operation headers (for the resulting composite request) separated by \
a semicolon. For the list of supported headers, please, refer to the domain \
management documentation or use tab-completion.

batch.run.option.headers.value={headers}

batch.run-file.description=\
This command must be executed while not in the batch mode. The command will \
read the file and execute its content as a batch. After that, no matter whether \
there was an error or not, the CLI will exit the batch mode.

batch.run-file.arguments.description=\
File system path to the file containing commands and operations that should be \
executed as a batch.

batch.run-file.arguments.value=file
