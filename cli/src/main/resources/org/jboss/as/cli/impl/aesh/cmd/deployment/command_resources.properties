# Copyright 2017 Red Hat, Inc.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#  http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

deployment.description=\
Command to manage deployments.

deployment.deployment-deploy.option.headers.description=\
Optional a list of operation headers separated by a semicolon. For the list of \
supported headers, please, refer to the domain management documentation or use \
tab-completion.

deployment.deployment-deploy.option.headers.value={headers}

deployment.deployment-deploy.option.server-groups.description=\
Comma separated list of server group names the deploy command should apply to. \
Either server-groups or all-server-groups is required in the domain mode. This \
argument is not applicable in the standalone mode.\n\
\n\
NOTE: In non-interactive mode, the list must be surrounded by square brackets \
e.g. [group1, group2].

deployment.deployment-deploy.option.server-groups.value=\
group_name (,group_name)*

deployment.deployment-deploy.option.all-server-groups.description=\
Indicates that deploy should apply to all the available server groups. Either \
server-groups or all-server-groups is required in domain mode. This argument is not \
applicable in the standalone mode.

deployment.enable-all.description=\
Enables all already existing but disabled in the repository deployment.

deployment.enable.description=\
Enables an already existing but disabled in the repository deployment.

deployment.enable.arguments.description=\
The unique name of the deployment.

deployment.enable.arguments.value=disabled deployment name

deployment.deploy-cli-archive.description=\
Deploys using a .cli archive file.

deployment.deploy-cli-archive.arguments.description=\
Points to a cli archive file. The path can be either absolute or relative to the \
current directory. A cli archive is a zip archive containing script(s) as well as \
artifacts or applications to deploy. To be recognized as a cli archive, the extension \
of the archive file should be '.cli'. The deploy command will execute the \
script given by the --script argument.

deployment.deploy-cli-archive.arguments.value=CLI archive file


deployment.deploy-cli-archive.option.script.description=\
Optional. The value is the name of the script contained in a cli archive to execute. \
If not specified, defaults to 'deploy.scr'. A cli archive is a zip archive containing script(s) \
as well as artifacts or applications to deploy. To be recognized as a cli archive, \
the extension of the archive file should be '.cli'. The deploy command will \
execute the script given by the --script argument. All paths in the scripts are \
relative to the root directory in the cli archive. The script is executed as a batch.

deployment.deploy-cli-archive.option.script.value=script file

deployment.deploy-file.description=\
Deploys the application designated by the file path.

deployment.deploy-file.arguments.description=\
Filesystem path to the application to deploy. The path can be either absolute \
or relative to the current directory.

deployment.deploy-file.arguments.value=file path

deployment.deploy-file.option.name.description=\
Optional, the unique name of the deployment. The file path name is the default value.

deployment.deploy-file.option.name.value=deployment name

deployment.deploy-file.option.unmanaged.description=\
If this argument is not specified, the deployment content will be copied (i.e. uploaded) \
to the server's deployment repository before it is deployed. If the argument is \
present, the deployment content will remain at and be deployed directly from \
its original location specified with the file_path. NOTE: exploded deployments \
are supported only as unmanaged.

deployment.deployment-deploy-content.option.disabled.description=\
Indicates that the deployment has to be added to the repository disabled. \
Not supported in a managed domain. If used in combination with the '--replace' or \
'-r' argument and the existing deployment is not disabled, the existing \
deployment will be undeployed.

deployment.deployment-deploy-content.option.enabled.description=\
Indicates that the deployment has to be added to the repository enabled. \
Not supported in a managed domain. If used in combination with the '--replace' \
or '-r' argument and the existing deployment is not enabled, the existing \
deployment will be deployed.

deployment.deployment-deploy-content.option.replace.description=\
If the deployment with the specified name already exists, by default, deploy \
will be aborted and the corresponding message will printed. Switch --replace (or -r) \
will replace the replacement of the existing deployment with the one specified in the \
command arguments.

deployment.deployment-deploy-content.option.runtime-name.description=\
Optional, the runtime name for the deployment. This will form the basis for such \
things as default Java EE application and module names. This would typically be the \
same as --name, and if not specified the value used for --name will be used. \
In some cases users may wish to have two deployments with the same 'runtime-name' \
(e.g. two versions of "example.war") both available in the management configuration, \
in which case the deployments would need to have distinct 'name' values but would \
have the same 'runtime-name'. Within an individual server, only one deployment with a given \
'runtime-name' can deployed. However, multiple deployments with the same 'runtime-name' \
can exist in the configuration, so long as only one is enabled.

deployment.deployment-deploy-content.option.runtime-name.value=runtime name

deployment.deploy-url.description=\
Deploys the application designated by the URL.

deployment.deploy-url.arguments.description=\
URL at which the deployment content is available for upload to the deployment content \
repository. Note that the URL must be accessible from the target of the operation \
(i.e. the Domain Controller or standalone server).

deployment.deploy-url.arguments.value=deployment URL

deployment.deploy-url.option.name.description=\
Optional, the unique name of the deployment. The url path name is the default value.

deployment.deploy-url.option.name.value=deployment name

deployment.disable.description=\
Disables the deployment with the given name and keeps its content in the repository.

deployment.disable.arguments.description=\
The name of the deployment to disable.

deployment.disable-all.description=\
Disables all deployments and keeps their content in the repository.

deployment.info.description=\
Displays information about single or multiple deployments.\
\n\
In the standalone mode the name argument is optional. If it's absent, the \
command will display information about all the registered deployments. Otherwise, \
the value of the name is either a specific deployment name or a wildcard expression.\
\n\
The displayed properties include:\n\
\n\
- NAME\n\
Unique identifier of the deployment. Must be unique across all deployments.\n\
\n\
- RUNTIME-NAME\n\
Name by which the deployment should be known within a server's runtime. This would \
be equivalent to the file name of a deployment file, and would form the basis \
for such things as default JEEdition application and module names. This would \
typically be the same as 'name', but in some cases users may wish to have two \
deployments with the same 'runtime-name' (e.g. two versions of \"foo.war\") \
both available in the deployment content repository, in which case the deployments \
would need to have distinct 'name' values but would have the same 'runtime-name'.\n\
\n\
- PERSISTENT\n\
Indicates whether the existence of the deployment should be recorded in the persistent \
server configuration. Only relevant to a standalone mode server. Default is 'true'.\
A deployment managed by a deployment scanner would have this set to 'false' to \
ensure the deployment is only deployed at server start if the scanner again detects \
the deployment.\n\
\n\
- ENABLED\n\
Boolean indicating whether the deployment content is currently deployed \
in the runtime (or should be deployed in the runtime the next time the server starts.)\n\
\n\
- STATUS\n\
The current runtime status of a deployment. Possible status modes are OK, FAILED \
(indicates a dependency is missing or a service could not start) and STOPPED \
(indicates that the deployment was manually stopped).\n\
\n\
In the domain mode, the command can display information about either:\n\
\n\
- single deployment with its state report from in each server group in the domain.\
In this case, the --name argument is required and its value is supposed to be a \
specific deployment name, not a wildcard expression.  The output of the command \
includes the name and the runtime name of the deployment (as in the standalone mode) \
that are followed by a table with headers SERVER-GROUP and STATE (described below).\n\
\n\
- single server group with a state report about each deployment in the domain with \
regard to the selected server group. In this case, the --server-group argument \
is required and its value must be a specific server group name, not a wildcard \
expression. The output of the command is a table with headers NAME, RUNTIME-NAME \
and STATE.\n\
\n\
The STATE column in both cases may contain the following values:\n\
\n\
added     - the deployment has been added to the server group\n\
\            but is not enabled.\n\
enabled   - the deployment has been added and enabled for the\n\
\            server group (this is the expected state of a\n\
\            deployment when it is deployed to a server group with\n\
\            the CLI deploy command).\n\
not added - the server group is not referencing the deployment.

deployment.info.arguments.description=\
Optional. The name of the deployment or a wildcard expression if the use-case allows \
(see the command description above). If it's absent, the command will display \
information about all the registered deployments.

deployment.info.arguments.value=name or wildcard

deployment.info.option.server-group.description=\
Allowed only the domain mode and specifies the target server group. Must be \
specified if the desired outcome is deployment report for a specific server group.\
Otherwise, can be omitted.

deployment.info.option.server-group.value=server group

deployment.info.option.headers.description=\
Optional, a list of operation headers separated by a semicolon. For the list of \
supported headers, please, refer to the domain management documentation or use \
tab-completion.

deployment.info.option.headers.value={operation headers}

deployment.list.description=\
The command will print all of the existing deployments in the repository. \
The presence of the -l switch will make the existing deployments printed one \
deployment per line, instead of in columns (the default).

deployment.list.option.l.description=\
(Optional) the presence of the -l switch will make the existing deployments \
printed one deployment per line, instead of in columns (the default).

deployment.undeploy.description=\
Undeploys the deployment with the given name and removes its content from the \
repository. In domain mode, if not all server groups \ are provided the content \
is kept.

deployment.undeploy.arguments.description=\
The name of the deployment to undeploy.

deployment.undeploy.arguments.value=deployment name

deployment.abstract-undeploy-deployment.option.all-relevant-server-groups.description=\
Indicates that undeploy should apply to all the server groups in which the \
deployment is enabled. Either server-groups or all-relevant-server-groups is \
required in domain mode. This argument is not applicable in the standalone mode.

deployment.abstract-undeploy-deployment.option.headers.description=\
A list of operation headers separated by a semicolon. For the list of supported \
headers, please, refer to the domain management documentation or use tab-completion.

deployment.abstract-undeploy-deployment.option.headers.value={headers}

deployment.abstract-undeploy-deployment.option.server-groups.description=\
Comma separated list of server group names the undeploy command should apply to. \
Either server-groups or all-relevant-server-groups is required in the domain mode.\
This argument is not applicable in the standalone mode.\
\n\
NOTE: In non-interactive mode, the list must be surrounded by square brackets e.g. \
[group1, group2].

deployment.abstract-undeploy-deployment.option.server-groups.value=group_name (,group_name)*

deployment.undeploy-cli-archive.description=\
Undeploys using a .cli archive file.

